{"version":3,"sources":["components/Search.tsx","components/Navigation.tsx","config.ts","helpers.ts","components/Settings.tsx","components/IssueListItem.tsx","components/IssueList.tsx","components/IssueComment.tsx","components/Issue.tsx","components/App.tsx","index.tsx"],"names":["IssueStateFilter","useStyles","makeStyles","createStyles","appBar","color","title","Navigation","classes","AppBar","position","className","Toolbar","Grid","justify","alignItems","container","item","Button","aria-label","component","RouterLink","to","startIcon","GitHub","fontSize","Typography","variant","endIcon","githubRepositoryRegex","RegExp","useStickyState","localStorageKey","defaultValue","localStorageValue","localStorage","getItem","initialValue","JSON","parse","React","useState","value","setValue","useEffect","setItem","stringify","theme","root","margin","field","marginTop","spacing","marginLeft","marginRight","fieldRepository","width","fieldToken","GithubSettingsTextField","fieldName","fieldDefaultValue","fieldRegex","formControlClassName","id","label","placeholder","helperText","helperTextError","autoFocus","isValid","test","isTouched","setTouched","FormControl","error","TextField","required","onChange","newValue","target","onFocus","undefined","onBlur","InputLabelProps","shrink","inputProps","spellCheck","Settings","authorizationEnabled","setAuthorizationEnabled","noValidate","autoComplete","md","wrap","FormLabel","FormControlLabel","control","Switch","checked","name","FormHelperText","Link","href","rel","paddingTop","issueStateFilter","radioGreen","green","radioRed","red","Search","both","setIssueStateFilter","RadioGroup","row","Radio","minWidth","cardContent","paddingLeft","paddingRight","paddingBottom","subTitle","IssueListItem","Card","CardActionArea","CardContent","xs","ErrorOutline","direction","Comment","IssueList","header","avatar","height","IssueComment","CardHeader","Avatar","titleTypographyProps","subheader","padding","issueStatusChip","backgroundColor","issueStatusIcon","Issue","action","IconButton","display","Chip","size","icon","App","basename","Container","maxWidth","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.331f270e.chunk.js","sourcesContent":["import React from \"react\";\n\nimport SearchBar from \"material-ui-search-bar\";\n\nimport {\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { green, red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: `${theme.spacing(2)}px auto`,\n      paddingTop: theme.spacing(2),\n      \"text-align\": \"right\",\n    },\n    issueStateFilter: {\n      marginTop: theme.spacing(2),\n    },\n    radioGreen: {\n      color: green[400],\n      \"&$checked\": {\n        color: green[600],\n      },\n    },\n    radioRed: {\n      color: red[400],\n      \"&$checked\": {\n        color: red[600],\n      },\n    },\n  })\n);\n\nenum IssueStateFilter {\n  open = \"open\",\n  closed = \"closed\",\n  both = \"both\",\n}\n\nexport const Search: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  const [issueStateFilter, setIssueStateFilter] = React.useState<\n    IssueStateFilter\n  >(IssueStateFilter.both);\n\n  return (\n    <div className={classes.root}>\n      <SearchBar />\n      <FormControl component=\"fieldset\" className={classes.issueStateFilter}>\n        <RadioGroup\n          row\n          aria-label=\"issueStateFilter\"\n          name=\"issueStateFilter\"\n          value={issueStateFilter}\n          onChange={({\n            target: { value },\n          }: React.ChangeEvent<HTMLInputElement>): void =>\n            setIssueStateFilter(value as IssueStateFilter)\n          }\n        >\n          <FormControlLabel\n            value=\"open\"\n            control={<Radio color=\"default\" className={classes.radioGreen} />}\n            label=\"Open\"\n          />\n          <FormControlLabel\n            value=\"closed\"\n            control={<Radio color=\"default\" className={classes.radioRed} />}\n            label=\"Closed\"\n          />\n          <FormControlLabel\n            value=\"both\"\n            control={<Radio color=\"default\" />}\n            label=\"Both\"\n          />\n        </RadioGroup>\n      </FormControl>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Button, Toolbar, Typography, Grid } from \"@material-ui/core\";\nimport { Settings, GitHub } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    appBar: {\n      color: \"#fff\",\n    },\n    title: {\n      \"text-transform\": \"none\",\n    },\n  })\n);\n\nexport const Navigation: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Grid justify=\"space-between\" alignItems=\"center\" container>\n          <Grid item>\n            <Button\n              aria-label=\"home\"\n              component={RouterLink}\n              to=\"/\"\n              color=\"inherit\"\n              startIcon={<GitHub fontSize=\"small\" />}\n            >\n              <Typography variant=\"h6\" className={classes.title}>\n                MMS GitHub Issue Explorer\n              </Typography>\n            </Button>\n          </Grid>\n\n          <Grid item>\n            <Button\n              component={RouterLink}\n              to=\"/settings\"\n              endIcon={<Settings />}\n              color=\"inherit\"\n            >\n              Settings\n            </Button>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","export const defaultGitHubRepository = \"https://github.com/facebook/react\";\n// https://regex101.com/r/8IgFO1/1/\nexport const githubRepositoryRegex = new RegExp(\n  \"^https?://github.com/(.+?)/(.+?)(?:/|$)\"\n);\n","import React from \"react\";\n\nexport const useStickyState = <T extends unknown>(\n  localStorageKey: string,\n  defaultValue: T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const localStorageValue = localStorage.getItem(localStorageKey);\n  const initialValue = localStorageValue\n    ? (JSON.parse(localStorageValue) as T)\n    : defaultValue;\n\n  const [value, setValue] = React.useState<T>(initialValue);\n\n  const storeValueInLocalStorage = (): void =>\n    localStorage.setItem(localStorageKey, JSON.stringify(value));\n\n  React.useEffect(storeValueInLocalStorage, [value]);\n\n  return [value, setValue];\n};\n","import React from \"react\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  FormControlLabel,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  Link,\n  Switch,\n  TextField,\n  FormControl,\n} from \"@material-ui/core\";\n\nimport { defaultGitHubRepository, githubRepositoryRegex } from \"../config\";\nimport { useStickyState } from \"../helpers\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: \"0 auto\",\n    },\n    field: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n    },\n    fieldRepository: {\n      width: \"50ch\",\n    },\n    fieldToken: {\n      width: \"100%\",\n    },\n  })\n);\n\ninterface GithubSettingsTextFieldProps {\n  fieldName: string;\n  fieldDefaultValue: string;\n  fieldRegex: RegExp;\n  formControlClassName: string;\n  id: string;\n  label: string;\n  placeholder: string;\n  helperText: React.ReactNode;\n  helperTextError?: React.ReactNode;\n  autoFocus: boolean;\n}\n\nconst GithubSettingsTextField: React.FC<GithubSettingsTextFieldProps> = ({\n  fieldName,\n  fieldDefaultValue,\n  fieldRegex,\n  formControlClassName,\n  id,\n  label,\n  placeholder,\n  helperText,\n  helperTextError,\n  autoFocus,\n}) => {\n  const classes = useStyles();\n\n  const [value, setValue] = useStickyState<string>(\n    fieldName,\n    fieldDefaultValue\n  );\n  const isValid = (): boolean => fieldRegex.test(value);\n  const [isTouched, setTouched] = React.useState<boolean>(false);\n\n  return (\n    <FormControl\n      error={isTouched && !isValid()}\n      className={`${classes.field} ${\n        classes[formControlClassName as keyof typeof classes]\n      }`}\n    >\n      <TextField\n        id={id}\n        required={true}\n        error={isTouched && !isValid()}\n        value={value}\n        onChange={({\n          target: { value: newValue },\n        }: React.ChangeEvent<HTMLInputElement>): void => setValue(newValue)}\n        autoFocus={autoFocus}\n        onFocus={!autoFocus ? (): void => setTouched(true) : undefined}\n        onBlur={autoFocus ? (): void => setTouched(true) : undefined}\n        label={label}\n        placeholder={placeholder}\n        helperText={\n          isTouched && !isValid() ? helperTextError || helperText : helperText\n        }\n        InputLabelProps={{\n          shrink: true,\n        }}\n        inputProps={{ spellCheck: \"false\" }}\n      />\n    </FormControl>\n  );\n};\n\nexport const Settings: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  const [authorizationEnabled, setAuthorizationEnabled] = useStickyState<\n    boolean\n  >(\"authorizationEnabled\", false);\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <Grid\n        container\n        item={true}\n        md={10}\n        wrap=\"wrap\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <GithubSettingsTextField\n          fieldName=\"githubRepository\"\n          fieldDefaultValue={defaultGitHubRepository}\n          fieldRegex={githubRepositoryRegex}\n          formControlClassName=\"fieldRepository\"\n          id=\"githubRepository\"\n          label=\"GitHub repository\"\n          placeholder={defaultGitHubRepository}\n          helperText={<span>Enter the full GitHub repository URL</span>}\n          helperTextError={\n            <span>\n              Invalid GitHub repository - use the following format:\n              <br />\n              <strong>{defaultGitHubRepository}</strong>\n            </span>\n          }\n          autoFocus={false}\n        />\n\n        <FormControl className={classes.field}>\n          <FormLabel component=\"label\">GitHub API authorization</FormLabel>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={authorizationEnabled}\n                name=\"authorizationEnabled\"\n                onChange={({\n                  target: { checked },\n                }: React.ChangeEvent<HTMLInputElement>): void =>\n                  setAuthorizationEnabled(checked)\n                }\n              />\n            }\n            label=\"Authorized\"\n          />\n          <FormHelperText>\n            Authorizing increases the request limits\n          </FormHelperText>\n        </FormControl>\n\n        {authorizationEnabled && (\n          <GithubSettingsTextField\n            fieldName=\"githubToken\"\n            fieldDefaultValue={defaultGitHubRepository}\n            fieldRegex={new RegExp(\"(.+)\")}\n            formControlClassName=\"fieldToken\"\n            id=\"githubToken\"\n            label=\"GitHub personal access token\"\n            placeholder=\"token\"\n            helperText={\n              <span>\n                Create a personal access token on GitHub with the public_repo\n                scope -{\" \"}\n                <Link\n                  href=\"https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  color=\"primary\"\n                >\n                  official guide\n                </Link>\n              </span>\n            }\n            autoFocus={true}\n          />\n        )}\n      </Grid>\n    </form>\n  );\n};\n","import React from \"react\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { Comment, ErrorOutline } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minWidth: 275,\n      margin: `${theme.spacing(2)}px auto`,\n    },\n    cardContent: {\n      paddingLeft: 0,\n      paddingRight: 0,\n      \"&:last-child\": {\n        paddingBottom: theme.spacing(2),\n      },\n    },\n    subTitle: {\n      fontSize: 12,\n    },\n  })\n);\n\nexport const IssueListItem: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardActionArea component={RouterLink} to=\"/123\">\n        <CardContent className={classes.cardContent}>\n          <Grid container justify=\"space-between\" alignItems=\"stretch\">\n            <Grid\n              item\n              xs={2}\n              md={1}\n              container\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <ErrorOutline />\n            </Grid>\n            <Grid\n              item\n              xs={8}\n              md={10}\n              container\n              justify=\"space-around\"\n              alignItems=\"flex-start\"\n              direction=\"column\"\n            >\n              <Typography variant=\"h6\" component=\"h2\">\n                mock issue\n              </Typography>\n              <Typography className={classes.subTitle} color=\"textSecondary\">\n                #111111 opened X days ago by krasiyan\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              xs={2}\n              md={1}\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Comment />\n              <Typography variant=\"body2\">100</Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n","import React from \"react\";\n\nimport { IssueListItem } from \"./IssueListItem\";\n\nexport const IssueList: React.FC<{}> = () => {\n  return (\n    <div>\n      <IssueListItem />\n      <IssueListItem />\n      <IssueListItem />\n      <IssueListItem />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport {\n  Avatar,\n  CardContent,\n  CardHeader,\n  Link,\n  Typography,\n  Card,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginLeft: theme.spacing(3),\n    },\n    header: {\n      \"& > .MuiCardHeader-avatar\": {\n        marginRight: theme.spacing(1),\n      },\n    },\n    avatar: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n  })\n);\n\nexport const IssueComment: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardHeader\n        avatar={<Avatar className={classes.avatar}>K</Avatar>}\n        titleTypographyProps={{ variant: \"h5\" }}\n        subheader={\n          <span>\n            <Link href=\"https://github.com/krasiyan\">krasiyan</Link> on October\n            16, 2020 19:00 UTC\n          </span>\n        }\n        className={classes.header}\n      />\n      <CardContent>\n        <Typography variant=\"body1\">mock issue comment</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n","import React from \"react\";\n\nimport {\n  Avatar,\n  CardContent,\n  CardHeader,\n  Chip,\n  Grid,\n  IconButton,\n  Link,\n  Typography,\n  Card,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { ErrorOutline, GitHub } from \"@material-ui/icons\";\nimport { green } from \"@material-ui/core/colors\";\n\nimport { IssueComment } from \"./IssueComment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: `${theme.spacing(2)}px auto`,\n      padding: theme.spacing(1),\n    },\n    issueStatusChip: {\n      color: \"white\",\n      backgroundColor: green[400],\n      marginLeft: theme.spacing(1),\n    },\n    issueStatusIcon: {\n      color: \"white\",\n    },\n  })\n);\n\nexport const Issue: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2} className={classes.root}>\n      <Grid item>\n        <Card variant=\"outlined\">\n          <CardHeader\n            avatar={<Avatar>K</Avatar>}\n            action={\n              <IconButton aria-label=\"settings\">\n                <Grid container direction=\"column\" alignItems=\"center\">\n                  <GitHub />\n                  <Typography variant=\"body2\">#123123</Typography>\n                </Grid>\n              </IconButton>\n            }\n            title=\"This is a bug\"\n            titleTypographyProps={{ variant: \"h5\" }}\n            subheader={\n              <Grid container alignItems=\"center\">\n                <Typography display=\"inline\">\n                  by <Link href=\"https://github.com/krasiyan\">krasiyan</Link> on\n                  October 16, 2020 19:00 UTC\n                </Typography>\n                <Chip\n                  label=\"Open\"\n                  size=\"small\"\n                  icon={<ErrorOutline className={classes.issueStatusIcon} />}\n                  className={classes.issueStatusChip}\n                />\n              </Grid>\n            }\n          />\n          <CardContent>\n            <Typography variant=\"body1\">mock issue content</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      <Grid item>\n        <IssueComment />\n      </Grid>\n      <Grid item>\n        <IssueComment />\n      </Grid>\n      <Grid item>\n        <IssueComment />\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { Container } from \"@material-ui/core\";\n\nimport { Navigation } from \"./Navigation\";\nimport { Settings } from \"./Settings\";\nimport { Search } from \"./Search\";\nimport { IssueList } from \"./IssueList\";\nimport { Issue } from \"./Issue\";\n\nexport const App: React.FC<{}> = () => (\n  <Router\n    basename={\n      // GitHub pages navigation workaround\n      // see https://github.com/rafgraph/spa-github-pages#single-page-apps-for-github-pages\n      process.env.NODE_ENV === \"production\" ? \"/mms-github-issue-explorer\" : \"/\"\n    }\n  >\n    <Navigation />\n\n    <Container maxWidth=\"md\">\n      <Switch>\n        <Route path=\"/settings\">\n          <Settings />\n        </Route>\n        <Route path=\"/:issueId\">\n          <Issue />\n        </Route>\n        <Route path=\"/\">\n          <Search />\n          <IssueList />\n        </Route>\n      </Switch>\n    </Container>\n  </Router>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}